{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matheusmesquita/Projects/personal/weather-application/src/organisms/SearchContainer/SearchContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { getCloserWeatherCities } from \"../../services/city\";\nimport { makeStyles } from \"@material-ui/core\";\nimport ButtonCompoent from \"../../atoms/ButtonComponent/ButtonComponent\";\nimport AsideCitiesResult from \"../AsideCitiesResult/AsideCitiesResult\";\nconst useStyles = makeStyles({\n  barContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    top: 60,\n    left: 0,\n    zIndex: 2,\n    width: 240,\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    margin: 10,\n    padding: 20,\n    borderRadius: 8,\n    \"& button\": {\n      width: \"100%\",\n      marginTop: 10\n    }\n  }\n});\n\nconst SearchContainer = props => {\n  _s();\n\n  const {\n    coordinates,\n    loading\n  } = props;\n  const classes = useStyles();\n  const [list, setList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [buttonLoading, setButtonLoading] = useState(false);\n\n  const onClickHandler = async () => {\n    const {\n      lat,\n      lng\n    } = coordinates;\n    setButtonLoading(true);\n    getCloserWeatherCities(lat, lng).then(response => response.json()).then(response => {\n      setList(response.list);\n      setIsOpen(true);\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => setButtonLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.barContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select a location and search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonCompoent, {\n        buttonLabel: \"Search\",\n        color: \"secondary\",\n        onClick: () => onClickHandler(),\n        loading: loading || buttonLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsideCitiesResult, {\n      list: list,\n      loading: buttonLoading,\n      isOpen: isOpen,\n      closeHandler: () => setIsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchContainer, \"doe7P5b65SlGTL9PABkn4v6lPfE=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchContainer;\nexport default SearchContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContainer\");","map":{"version":3,"sources":["/Users/matheusmesquita/Projects/personal/weather-application/src/organisms/SearchContainer/SearchContainer.js"],"names":["React","useState","getCloserWeatherCities","makeStyles","ButtonCompoent","AsideCitiesResult","useStyles","barContainer","display","alignItems","flexDirection","justifyContent","top","left","zIndex","width","position","backgroundColor","margin","padding","borderRadius","marginTop","SearchContainer","props","coordinates","loading","classes","list","setList","isOpen","setIsOpen","buttonLoading","setButtonLoading","onClickHandler","lat","lng","then","response","json","catch","error","console","log","finally"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,sBAAT,QAAuC,qBAAvC;AAGA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,aAAa,EAAE,QAHH;AAIZC,IAAAA,cAAc,EAAE,QAJJ;AAMZC,IAAAA,GAAG,EAAE,EANO;AAOZC,IAAAA,IAAI,EAAE,CAPM;AAQZC,IAAAA,MAAM,EAAE,CARI;AASZC,IAAAA,KAAK,EAAE,GATK;AAUZC,IAAAA,QAAQ,EAAE,UAVE;AAWZC,IAAAA,eAAe,EAAE,OAXL;AAaZC,IAAAA,MAAM,EAAE,EAbI;AAcZC,IAAAA,OAAO,EAAE,EAdG;AAeZC,IAAAA,YAAY,EAAE,CAfF;AAiBZ,gBAAY;AACVL,MAAAA,KAAK,EAAE,MADG;AAEVM,MAAAA,SAAS,EAAE;AAFD;AAjBA;AADa,CAAD,CAA5B;;AAyBA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA2BF,KAAjC;AACA,QAAMG,OAAO,GAAGpB,SAAS,EAAzB;AAEA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMgC,cAAc,GAAG,YAAY;AACjC,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAeX,WAArB;AACAQ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEA9B,IAAAA,sBAAsB,CAACgC,GAAD,EAAMC,GAAN,CAAtB,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBT,MAAAA,OAAO,CAACS,QAAQ,CAACV,IAAV,CAAP;AACAG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KALH,EAMGS,KANH,CAMUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH,EASGG,OATH,CASW,MAAMX,gBAAgB,CAAC,KAAD,CATjC;AAUD,GAdD;;AAgBA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACnB,YAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,cAAD;AACE,QAAA,WAAW,EAAC,QADd;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,OAAO,EAAE,MAAM0B,cAAc,EAH/B;AAIE,QAAA,OAAO,EAAER,OAAO,IAAIM;AAJtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEJ,IAAzB;AAA+B,MAAA,OAAO,EAAEI,aAAxC;AAAuD,MAAA,MAAM,EAAEF,MAA/D;AAAuE,MAAA,YAAY,EAAE,MAAMC,SAAS,CAAC,KAAD;AAApG;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgBD,CAxCD;;GAAMR,e;UAEYhB,S;;;KAFZgB,e;AA0CN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { getCloserWeatherCities } from \"../../services/city\";\n\n\nimport { makeStyles } from \"@material-ui/core\";\n\nimport ButtonCompoent from \"../../atoms/ButtonComponent/ButtonComponent\";\nimport AsideCitiesResult from \"../AsideCitiesResult/AsideCitiesResult\";\n\nconst useStyles = makeStyles({\n  barContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n\n    top: 60,\n    left: 0,\n    zIndex: 2,\n    width: 240,\n    position: \"absolute\",\n    backgroundColor: \"white\",\n\n    margin: 10,\n    padding: 20,\n    borderRadius: 8,\n\n    \"& button\": {\n      width: \"100%\",\n      marginTop: 10,\n    },\n  },\n});\n\nconst SearchContainer = (props) => {\n  const { coordinates, loading } = props;\n  const classes = useStyles();\n\n  const [list, setList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [buttonLoading, setButtonLoading] = useState(false);\n\n  const onClickHandler = async () => {\n    const { lat, lng } = coordinates;\n    setButtonLoading(true);\n\n    getCloserWeatherCities(lat, lng)\n      .then((response) => response.json())\n      .then((response) => {\n        setList(response.list);\n        setIsOpen(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => setButtonLoading(false));\n  };\n\n  return (\n    <>\n      <div className={classes.barContainer}>\n        <span>Select a location and search</span>\n\n        <ButtonCompoent\n          buttonLabel=\"Search\"\n          color=\"secondary\"\n          onClick={() => onClickHandler()}\n          loading={loading || buttonLoading}\n        />\n      </div>\n\n      <AsideCitiesResult list={list} loading={buttonLoading} isOpen={isOpen} closeHandler={() => setIsOpen(false)} />\n    </>\n  );\n};\n\nexport default SearchContainer;\n"]},"metadata":{},"sourceType":"module"}